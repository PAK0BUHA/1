#include <iostream>
#include <ctime>

using namespace std;

void fillmas(int& n, int* A)
{
	
	for (int i = 0; i < n; i++)
	{
		A[i] = rand() % 20 - 10;
		cout << A[i] << " ";
	}
}

void sortmas(int& n, int* A)
{

	for (int i = 0; i < n - 1; i++)
	{
		int key = i + 1;
		int temp = A[key];
		for (int j = i + 1; j > 0; j--)
		{
			if (temp < A[j - 1]) // > - по убыванию | < - по возрастанию
			{
				A[j] = A[j - 1];
				key = j - 1;
			}
		}
		A[key] = temp;
	}
}

void outmas(int& n, int* A)
{
	cout << endl << "Отсортированный массив: " << endl;
	for (int i = 0; i < n; i++)
	{
		cout << A[i] << " ";
	}
}

void search(int& n, int* A, int& key)
{
	bool flag = false;
	int l = 0;
	int r = n - 1;
	int mid;
	while ((l <= r) && (flag != true))
	{
		mid = (l + r) / 2;
		if (A[mid] == key) flag = true;
		if (A[mid] > key) r = mid - 1;
		else l = mid + 1;
	}
	if (flag) cout << endl << "Индекс элемента " << key << " в массиве равен: " << mid;
	else cout << endl << "Такого элемента в массиве нет.";
}

int main()
{
	setlocale(LC_ALL, "rus");
	srand(time(0));
	int n, key;
	cout << "Введите размер массива: ";
	cin >> n;
	cout << "Введите элемент, который хотите найти: ";
	cin >> key;
	cout << "Задан массив: " << endl;
	int* A = new int[n];
	fillmas(n, A);
	sortmas(n, A);
	outmas(n, A);
	search(n, A, key);
	delete[] A;
}
